{"version":3,"sources":["kisspng-imdb-film-director-computer-icons-television-u-5ac6f594137fd3.2912686215229884360799.png","actions/index.js","components/Favorites/Favorites.js","components/Buscador/Buscador.js","components/NavBar/NavBar.js","components/Movie/Movie.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","addMovieFavorite","payload","type","ConnectedList","style","marginTop","fontFamily","fontWeight","color","fontSize","textAlign","marginRight","listStyle","this","props","movies","map","item","i","paddingBottom","justifyContent","flexDirection","key","textDecoration","to","id","title","className","onClick","removeMovieFavorite","imdbID","Component","connect","state","dispatch","movie","Buscador","event","setState","target","value","preventDefault","getMovies","onSubmit","e","handleSubmit","marginLeft","height","width","borderColor","borderWidth","borderStyle","outline","borderRadius","autoComplete","onChange","handleChange","placeholder","margin","Title","log","console","moviesLoaded","titulo","fetch","then","response","json","NavBar","src","Logo","alt","marginBottom","paddingLeft","paddingRight","exact","Movie","movieId","match","params","getMovieDetail","Object","keys","length","Year","Plot","React","movieDetail","App","Fragment","path","component","Favorites","Boolean","window","location","hostname","initialState","rootReducer","action","Search","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4d8caff0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kisspng-imdb-film-director-computer-icons-television-u-5ac6f594137fd3.2912686215229884360799.37b9ee6b.png\";","\r\n\r\nexport function addMovieFavorite(payload) {\r\n  return { type: \"ADD_MOVIE_FAVORITE\", payload };\r\n}\r\n\r\nexport function removeMovieFavorite(payload) {\r\n  return { type: \"REMOVE_MOVIE_FAVORITE\", payload };\r\n}\r\n\r\nexport function getMovies(titulo) {\r\n  return function(dispatch) {\r\n    return fetch(\"http://www.omdbapi.com/?apikey=20dac387&s=\" + titulo)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        dispatch({ type: \"GET_MOVIES\", payload: json });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getMovieDetail(id) {\r\n  return function(dispatch) {\r\n    return fetch(`http://www.omdbapi.com/?apikey=20dac387&i=${id}` + `&plot=full` )\r\n      .then(response => response.json())\r\n      .then(json => dispatch({type: \"GET_MOVIE_DETAIL\", payload: json}))\r\n    };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeArticle } from \"../../actions/index\";\r\nimport { Link } from 'react-router-dom';\r\nimport {removeMovieFavorite} from \"../../actions/index.js\"\r\nimport \"./Favorites.css\"\r\n\r\nexport class ConnectedList extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div style={{marginTop: -11}}>\r\n        <h2 style={{fontFamily: \"Oxygen\", fontWeight: \"bolder\", color: \"#707070\", fontSize: 25, textAlign: 'center',  marginRight: '-2%'}}>Your movies</h2>\r\n        <ul style={{listStyle: 'none', textAlign: 'center', marginTop: 52}}>\r\n          {this.props.movies.map((item,i) => {\r\n              return (\r\n                  <div style={{textAlign: 'center', paddingBottom: 33, marginTop: 8, justifyContent: \"center\", flexDirection: \"column\"}} key={i}>\r\n                    <Link style={{textDecoration: \"none\", color: \"#808080\",  fontSize: 18}} to= {`/movie/${item.id}`}>\r\n                      {item.title}\r\n                    </Link>    \r\n                    <button className=\"x\" onClick={() => this.props.removeMovieFavorite({title: item.title, id: item.imdbID})}>\r\n                       X\r\n                    </button>\r\n                  </div>\r\n              )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        movies: state.movies\r\n    };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\r\n    return {\r\n        removeMovieFavorite: movie => dispatch(removeMovieFavorite(movie))\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ConnectedList);\r\n"," import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Buscador.css';\r\nimport {getMovies, addMovieFavorite} from \"../../actions/index.js\";\r\n\r\nexport class Buscador extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\"\r\n    };\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ title: event.target.value });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.getMovies(this.state.title)\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.state;\r\n    return (\r\n      <div>\r\n        \r\n        <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\r\n          <div style={{marginTop: 53, marginLeft: '6%'}}>\r\n            {/* <label className=\"label\" htmlFor=\"title\">Película: </label> */}\r\n            <input\r\n              style={{height: 22, width: 250, borderColor: \"#484848\", borderWidth: \"1.5px\", borderStyle: \"solid\", outline: \"none\", borderRadius: 4}}\r\n              type=\"text\"\r\n              id=\"title\"\r\n              autoComplete=\"off\"\r\n              value={title}\r\n              onChange={(e) => this.handleChange(e)}\r\n              placeholder=\"Search movies\"\r\n            />\r\n            <button className=\"submit\" type=\"submit\">SEARCH</button>\r\n          </div>\r\n          \r\n        </form>\r\n        <div className=\"result\">\r\n          <ul className=\"uli\">\r\n          {this.props.movies && this.props.movies.map((item,i) => {\r\n              return (\r\n              <li style={{margin: 33, fontFamily:\"Oxygen\"}} key = {i}>\r\n              <NavLink style={{textDecoration: \"none\", color: \"#808080\", fontSize: 19, marginTop: 5}} to={`/movie/${item.imdbID}`}>\r\n                {item.Title}\r\n              </NavLink>\r\n                <button className=\"fav\" log = {console.log(item)} onClick = {() => this.props.addMovieFavorite({title: item.Title, id: item.imdbID})}>\r\n                  Fav\r\n                </button>\r\n                <br/>\r\n              </li>\r\n          )})}\r\n          </ul>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    movies: state.moviesLoaded\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\r\n  return {\r\n    addMovieFavorite: movie => dispatch(addMovieFavorite(movie)),\r\n    getMovies: title => dispatch(getMovies(title))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Buscador);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Logo from '../../kisspng-imdb-film-director-computer-icons-television-u-5ac6f594137fd3.2912686215229884360799.png'\r\n\r\nimport './Navbar.css';\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <header className=\"navbar\">\r\n            <div>\r\n                <img id=\"logoHenry\" src={Logo} width=\"60\" height=\"60\" className=\"d-inline-block align-top\" alt=\"\" />\r\n                \r\n            </div>\r\n            <h2 style={{marginLeft: '-61%', marginBottom: 23, fontFamily: \"Oxygen\", fontWeight: \"lighter\", color: \"#808080\", fontSize: 20}}>Remember what you want to see</h2>\r\n            <nav style={{marginRight: -20}}>\r\n                <ul className=\"list\">\r\n                    <li className=\"list-item\">\r\n                        <NavLink style={{margin: 5,fontWeight: \"bold\",  textDecoration: \"none\", fontFamily: \"Oxygen\", marginTop: 40, paddingLeft: 0, paddingRight: 0}} exact to=\"/\" >Home</NavLink>\r\n                    </li>\r\n                    <li className=\"list-itemb\">\r\n                        <NavLink style={{margin: 5, fontWeight: \"bold\", textDecoration: \"none\", fontFamily: \"Oxygen\", color: \"white\", marginBottom: 10}} to=\"/favs\" >Favourites</NavLink>\r\n                    </li>        \r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMovieDetail, addMovieFavorite } from '../../actions/index';\r\n\r\nimport './Movie.css';\r\n\r\nclass Movie extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const movieId = this.props.match.params.id;\r\n        this.props.getMovieDetail(movieId);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if(Object.keys(this.props.movie).length < 1) return <h1>Cargando...</h1>\r\n        return (\r\n            <div className=\"movie-detail\">\r\n                <h1 style={{textAlign: \"center\", fontFamily: \"Oxygen\", color: \"#808080\"}}>{this.props.movie.Title}</h1>\r\n                \r\n                <h3 style={{textAlign: \"center\", marginTop: -10, fontFamily: \"Oxygen\", color: \"#808080\"}}>{this.props.movie.Year}</h3>\r\n                <button className=\"fav1\" onClick = {() => this.props.addMovieFavorite({title: this.props.movie.Title, id: this.props.movie.imdbID})}>\r\n                  Fav\r\n                </button>\r\n                <p style={{textAlign: \"center\", marginTop: -10, width: \"30%\", marginLeft: \"35%\", marginTop: 20, lineHeight: \"30px\", fontSize: 17, fontFamily: \"Oxygen\", color: \"#808080\"}}>{this.props.movie.Plot}</p>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        movie: state.movieDetail\r\n    };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getMovieDetail: id => dispatch(getMovieDetail(id)),\r\n        addMovieFavorite: movie => dispatch(addMovieFavorite(movie))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Movie);\r\n","import React from \"react\";\r\n\r\nimport Favorites from \"./components/Favorites/Favorites\";\r\nimport Buscador from \"./components/Buscador/Buscador\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Movie from \"./components/Movie/Movie\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n      <React.Fragment>\r\n        <div className=\"back\">\r\n          <NavBar />\r\n          <Route exact path=\"/\" component={Buscador} />\r\n          <Route path=\"/favs\" component={Favorites} />\r\n          <Route path=\"/movie/:id\" component={Movie} />\r\n        </div>\r\n          \r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\n\r\nconst initialState = {\r\n  movies: [],   //favs\r\n  moviesLoaded: [],  //lista pelis\r\n  movieDetail: {},\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case \"ADD_MOVIE_FAVORITE\":\r\n        return {\r\n            ...state,\r\n            movies: [...state.movies, action.payload]\r\n        }\r\n\r\n        case \"GET_MOVIES\":\r\n        return {\r\n            ...state,\r\n            moviesLoaded: action.payload.Search\r\n        }\r\n\r\n\r\n        case \"REMOVE_MOVIE_FAVORITE\":\r\n\r\n        return {\r\n            ...state,\r\n            movies: state.movies.filter(item => item.title !== action.payload.title)\r\n        }\r\n\r\n        case \"GET_MOVIE_DETAIL\":\r\n\r\n        return {\r\n            ...state,\r\n            movieDetail: action.payload\r\n        }\r\n\r\n        default: return state;\r\n\r\n    }\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/index\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}